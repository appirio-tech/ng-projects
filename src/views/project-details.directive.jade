loader(ng-show="vm.loading")

.confirm.claim.flex.middle.center(ng-class="{ active: vm.showConfirmClaim }")
  p(ng-hide="vm.claimed") Are you sure you want to claim this project?

  .flex.bottom(ng-show="vm.claimed")
    .icon.checkmark-white.small

    h5 Project claimed!

  button.hollow(ng-click="vm.claim()" ng-hide="vm.claiming || vm.claimed") yes, claim it!

  button.hollow(ng-click="vm.showConfirmClaim = !vm.showConfirmClaim" ng-hide="vm.claiming || vm.claimed") cancel

  .loader-house(ng-show="vm.claiming")
    loader

.confirm.launch.flex.middle.center(ng-class="{ active: vm.showConfirmLaunch }")
  p(ng-hide="vm.launched") Are you sure you want to launch this project?

  .flex.bottom(ng-show="vm.launched")
    .icon.checkmark-white.small

    h5 Project launched!

  button.hollow(ng-click="vm.launch()" ng-hide="vm.launching || vm.launched") yes, launch it!

  button.hollow(ng-click="vm.showConfirmlaunch = !vm.showConfirmlaunch" ng-hide="vm.launching || vm.launched") cancel

  .loader-house(ng-show="vm.launching")
    loader

estimate-project(
  project-id="{{ vm.id }}"
  ng-if="vm.userType == 'COPILOT'"
  ng-class="{ active: vm.claimed }"
)

.flex.rows
  .house.nav
    button.action.claim(
      ng-if="vm.userType == 'COPILOT' && !vm.claimed"
      ng-hide="vm.showConfirmClaim"
      ng-click="vm.showConfirmClaim = !vm.showConfirmClaim"
    ) claim project

    button.action.launch(
      ng-if="vm.userType == 'COPILOT' && vm.estimateAccepted"
      ng-hide="vm.showConfirmLaunch"
      ng-click="vm.showConfirmLaunch = !vm.showConfirmLaunch; vm.showConfirmClaim = false"
    ) launch project

    ul
      li
        button.clean(scroll-element="projectSetup") Project setup

      li
        button.clean(scroll-element="features") Features

      li
        button.clean(scroll-element="design") Design

      li
        button.clean(scroll-element="development") Development

  ul.requirements.flex-grow(ng-hide="vm.loading")
    li(id="projectSetup")
      h3 Project Setup

      hr.biggest

      h4 iOS platform details

      ul.platform.flex.space-between
        li.device
          h5 Device

          ul
            li.flex.middle(ng-repeat="device in vm.project.deviceIds")
              img.icon.small(ng-src="/images/icon-check.svg")

              span {{ vm.textMap[device] || device }}

        li.orientation
          h5 Orientation

          ul
            li.flex.middle(ng-repeat="orientation in vm.project.orientationIds")
              img.icon.small(ng-src="/images/icon-check.svg")

              span {{ vm.textMap[orientation] || orientation }}

      h4 Project type

      .project-type.flex.middle(ng-if="vm.project.projectType == 'DESIGN'")
        img.biggest(ng-src="/images/design-colored.svg")

        p Design

      .project-type.flex.middle(ng-if="vm.project.projectType != 'DESIGN'")
        img.biggest(ng-src="/images/design-development-colored.svg")

        p Design &amp; Development

    li(id="features")
      h3 Features

      hr.biggest

      h4(ng-if="vm.project.files.features.downloadUrl") Uploaded features documents

      a(ng-if="vm.project.files.features.downloadUrl" href="vm.project.files.features.downloadUrl") {{vm.project.files.features.filename}}

      h4 Features &amp; descriptions

      ul.features-descriptions
        li(ng-repeat="feature in vm.project.features")
          p {{ feature.title }}

          p {{ feature.description }}

          hr

    li(id="design")
      h3 Design

      hr.biggest

      h4(ng-if="vm.project.files.visuals.downloadUrl") Uploaded design documents

      a(ng-if="vm.project.files.visuals.downloadUrl" href="#") {{vm.project.files.visuals.filename}}

      h4 URL to get styles

      a(href="{{ url }}" ng-repeat="url in vm.project.designUrls" target="_blank") {{ url }}

      h4 Fonts

      .flex.middle
        .big-a A

        span {{ vm.project.fontIds.join(', ') }}

      h4 Colors

      ul.color-swatches
        li(ng-repeat="color in vm.project.colorSwatchIds")
          img(ng-src="/images/{{ vm.imageMap[color] }}.png")

      h4 Icons

      .flex.middle(ng-repeat="icon in vm.project.iconsetIds")
        img.icon.biggest(ng-src="/images/{{ vm.imageMap[icon] }}.svg")

        span {{ vm.textMap[icon] }}

    li(id="development")
      h3 Development

      hr.biggest

      h4(ng-if="vm.project.files.development.downloadUrl") Uploaded development documents

      a(ng-if="vm.project.files.development.downloadUrl" href="#") {{vm.project.files.development.filename}}

      h4 What level of security is needed?

      p Security level needed: {{ vm.project.securityLevel }}

      h4 Access to data offline?

      p(ng-if="vm.project.offlineAccess") Yes, access to offline data is needed.

      p(ng-if="!vm.project.offlineAccess") No, access to offline data is not needed.

      h4 Is there any level of personal information? (stored or transmitted)?

      p(ng-if="vm.project.usesPersonalInformation") Yes, storing and/or transmitting personal information is needed.

      p(ng-if="!vm.project.usesPersonalInformation") No, storing and/or transmitting personal information is not needed.

      h4 How many 3rd party integrations?

      p There are {{ vm.project.numberOfApiIntegrations }} integrations needed.



